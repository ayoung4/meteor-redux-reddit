{
  "name": "meteor-redux-reddit",
  "private": true,
  "scripts": {
    "start": "MONGO_URL=mongodb://cn:Kahlon13@13.91.19.47:27117/test?ssl=true meteor run",
    "jest": "jest ./client --coverage",
    "test": "meteor test --once --driver-package meteortesting:mocha",
    "accept": "ts-mocha tests/acceptance.tests.ts",
    "storybook": "start-storybook -p 6006",
    "build-storybook": "build-storybook"
  },
  "dependencies": {
    "@babel/runtime": "^7.0.0-beta.36",
    "@types/meteor": "^1.4.13",
    "faker": "^4.1.0",
    "lodash": "^4.17.5",
    "meteor-node-stubs": "^0.3.2",
    "meteor-redux-middlewares": "^3.0.6",
    "meteor-redux-subscriptions": "^1.0.2",
    "react": "^16.2.0",
    "react-dom": "^16.2.0",
    "react-redux": "^5.0.7",
    "react-router-dom": "^4.2.2",
    "react-router-redux": "^5.0.0-alpha.9",
    "react-semantic-redux-form": "^1.2.6",
    "recompose": "^0.26.0",
    "redux": "^3.7.2",
    "redux-form": "^7.3.0",
    "redux-history-transitions": "^2.2.0",
    "redux-observable": "^0.18.0",
    "redux-thunk": "^2.2.0",
    "reselect": "^3.0.1",
    "rxjs": "^5.5.8",
    "semantic-ui-css": "^2.3.1",
    "semantic-ui-react": "^0.79.0",
    "simpl-schema": "^1.4.2"
  },
  "devDependencies": {
    "@storybook/addon-actions": "^3.4.0",
    "@storybook/addon-links": "^3.4.0",
    "@storybook/addons": "^3.4.0",
    "@storybook/react": "^3.4.0",
    "@types/chai": "^4.1.2",
    "@types/enzyme": "^3.1.9",
    "@types/faker": "^4.1.2",
    "@types/jest": "^22.2.2",
    "@types/lodash": "^4.14.106",
    "@types/mocha": "^5.0.0",
    "@types/puppeteer": "^1.2.0",
    "@types/react": "^16.0.40",
    "@types/react-dom": "^16.0.4",
    "@types/react-redux": "^5.0.15",
    "@types/react-router-dom": "^4.2.5",
    "@types/react-router-redux": "^5.0.12",
    "@types/recompose": "^0.24.6",
    "@types/redux": "^3.6.0",
    "@types/redux-form": "^7.2.2",
    "@types/reselect": "^2.2.0",
    "@types/storybook__react": "^3.0.7",
    "awesome-typescript-loader": "^4.0.1",
    "babel-core": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "babel-preset-react": "^6.24.1",
    "babel-preset-stage-1": "^6.24.1",
    "babel-root-slash-import": "^1.1.0",
    "chai": "^4.1.2",
    "enzyme": "^3.3.0",
    "enzyme-adapter-react-16": "^1.1.1",
    "jest": "^22.4.3",
    "jest-meteor-stubs": "^1.5.1",
    "mocha": "^5.0.5",
    "puppeteer": "^1.2.0",
    "redux-logger": "^3.0.6",
    "redux-mock-store": "^1.5.1",
    "ts-jest": "^22.4.2",
    "ts-mocha": "^1.1.0",
    "tslint": "^5.9.1",
    "typescript": "^2.7.2"
  },
  "jest": {
    "globals": {
      "ts-jest": {
        "tsConfigFile": "./tsconfig.jest.json"
      }
    },
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.{ts,tsx}",
      "!**/types/*",
      "!**/node_modules/**",
      "!**/vendor/**"
    ],
    "moduleNameMapper": {
      "Client/(.*)": "<rootDir>/client/$1",
      "Data/(.*)": "<rootDir>/client/data/$1",
      "Components/(.*)": "<rootDir>/client/components/$1",
      "Containers/(.*)": "<rootDir>/client/components/containers/$1",
      "Scenes/(.*)": "<rootDir>/client/components/scenes/$1",
      "Providers/(.*)": "<rootDir>/client/providers/$1",
      "meteor/(.*)": "<rootDir>/tests/mocks/$1",
      "^(.*):(.*)$": "$1_$2"
    },
    "modulePaths": [
      "<rootDir>/node_modules/",
      "<rootDir>/node_modules/jest-meteor-stubs/lib/"
    ],
    "unmockedModulePathPatterns": [
      "/^lib\\/.*\\.jsx?$/",
      "/^node_modules/"
    ],
    "testRegex": "(/__tests__/.*|(\\.|/)(test|tests))\\.(jsx?|tsx?)$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ]
  }
}
